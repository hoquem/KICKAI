repos:
  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        name: isort (python)
        args: ["--profile", "black", "--filter-files"]

  # Code formatting
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        language_version: python3.11
        args: ["--line-length", "88"]

  # Linting
  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: [
          "--max-line-length=88",
          "--extend-ignore=E203,E501,W503,W504",
          "--exclude=.git,__pycache__,build,dist,*.egg-info,venv,.venv,.mypy_cache,.pytest_cache"
        ]

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      - id: mypy
        additional_dependencies: [types-all]
        args: [
          "--python-version=3.11",
          "--warn-return-any",
          "--disallow-untyped-defs",
          "--disallow-incomplete-defs",
          "--check-untyped-defs",
          "--disallow-untyped-decorators",
          "--no-implicit-optional",
          "--warn-redundant-casts",
          "--warn-unused-ignores",
          "--warn-no-return",
          "--warn-unreachable",
          "--strict-equality",
          "--show-error-codes"
        ]

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ["-r", "src", "-f", "json", "-o", "bandit-report.json"]
        exclude: "tests/"

  # Trailing whitespace
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-json
      - id: check-merge-conflict
      - id: debug-statements
      - id: name-tests-test
      - id: requirements-txt-fixer

  # Custom architectural enforcement
  - repo: local
    hooks:
      - id: check-architectural-imports
        name: Check Architectural Import Rules
        entry: python scripts/check_architectural_imports.py
        language: python
        files: ^src/.*\.py$
        pass_filenames: false

      - id: check-circular-imports
        name: Check Circular Imports
        entry: python scripts/check_circular_imports.py
        language: python
        files: ^src/.*\.py$
        pass_filenames: false

      - id: check-in-function-imports
        name: Check In-Function Imports
        entry: python scripts/check_in_function_imports.py
        language: python
        files: ^src/.*\.py$
        pass_filenames: false

  # Dependency management
  - repo: https://github.com/jendrikseipp/vulture
    rev: v2.9.1
    hooks:
      - id: vulture
        args: ["src", "--min-confidence", "80"]

  # Import complexity
  - repo: https://github.com/pycqa/mccabe
    rev: 0.7.0
    hooks:
      - id: mccabe
        args: ["--max-complexity", "10"]

  # Documentation
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [
          "--convention=google",
          "--add-ignore=D100,D104,D106,D200,D203,D212,D401,D406,D407,D413"
        ]
        exclude: "tests/"

  # Test coverage
  - repo: local
    hooks:
      - id: check-test-coverage
        name: Check Test Coverage
        entry: python scripts/check_test_coverage.py
        language: python
        pass_filenames: false
        stages: [manual]

  # Performance
  - repo: https://github.com/pycqa/pylint
    rev: v2.17.5
    hooks:
      - id: pylint
        args: [
          "--disable=C0114,C0115,C0116",  # Disable docstring warnings
          "--max-line-length=88",
          "--disable=invalid-name",
          "--disable=too-few-public-methods",
          "--disable=too-many-arguments",
          "--disable=too-many-instance-attributes",
          "--disable=too-many-locals",
          "--disable=too-many-public-methods",
          "--disable=too-many-return-statements",
          "--disable=too-many-statements",
          "--disable=unused-argument",
          "--disable=unused-variable",
          "--disable=fixme",
          "--disable=consider-using-f-string",
          "--disable=consider-using-dict-comprehension",
          "--disable=consider-using-list-comprehension",
          "--disable=consider-using-set-comprehension",
          "--disable=consider-using-generator",
          "--disable=consider-using-enumerate",
          "--disable=consider-using-any-or-all",
          "--disable=consider-using-join",
          "--disable=consider-using-max-builtin",
          "--disable=consider-using-min-builtin",
          "--disable=consider-using-sum",
          "--disable=consider-using-with",
          "--disable=consider-using-dict-items",
          "--disable=consider-using-dict-keys",
          "--disable=consider-using-dict-values",
          "--disable=consider-using-get",
          "--disable=consider-using-sys-exit",
          "--disable=consider-using-ternary",
          "--disable=consider-using-any-or-all",
          "--disable=consider-using-join",
          "--disable=consider-using-max-builtin",
          "--disable=consider-using-min-builtin",
          "--disable=consider-using-sum",
          "--disable=consider-using-with",
          "--disable=consider-using-dict-items",
          "--disable=consider-using-dict-keys",
          "--disable=consider-using-dict-values",
          "--disable=consider-using-get",
          "--disable=consider-using-sys-exit",
          "--disable=consider-using-ternary",
        ]
        exclude: "tests/"

  # Git hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-commit-message
        args: ["--pattern", "^(feat|fix|docs|style|refactor|test|chore)(\\(.+\\))?: .+"]
        stages: [commit-msg]

  # Commit message formatting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.5.2
    hooks:
      - id: commitizen
        stages: [commit-msg]

ci:
  autofix_commit_msg: "style: auto-fix formatting and imports"
  autoupdate_commit_msg: "chore: update pre-commit hooks" 