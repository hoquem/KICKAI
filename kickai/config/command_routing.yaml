# KICKAI Command Routing Configuration - CrewAI Native Routing System
# With native CrewAI routing, intelligent routing is handled by MESSAGE_PROCESSOR using LLM intelligence
# This file provides minimal configuration for compatibility with existing systems

# Version and metadata
version: "2.0.0"
description: "Simplified routing configuration for CrewAI native routing with 5-agent system"
last_updated: "2025-01-18"
routing_method: "crewai_native_collaboration"

# CrewAI Native Collaboration Configuration
collaboration_routing:
  # Primary agent for all requests - MESSAGE_PROCESSOR with native LLM routing
  primary_agent: "message_processor"
  
  # Routing pattern: MESSAGE_PROCESSOR uses native CrewAI LLM intelligence for routing
  routing_pattern: "native_llm_routing"
  
  # Intelligent routing handled by LLM intelligence, not configuration
  intelligent_routing: true
  
  # Available agents for delegation (5-agent system)
  available_agents:
    - "message_processor"    # Primary interface with native routing intelligence
    - "help_assistant"       # Help system and guidance
    - "player_coordinator"   # Player management and registration
    - "team_administrator"   # Team member management
    - "squad_selector"       # Match management and availability

# Default routing behavior (minimal for compatibility)
default_routing:
  default_agent: "message_processor"
  fallback_agent: "message_processor"
  routing_method: "crewai_collaboration"

# Intelligent command routing to specialized agents
command_routing:
  help_commands:
    agent: "help_assistant"
    commands: ["/help", "help"]
    description: "Help system queries and guidance"
    priority: 1

  basic_system_commands:
    agent: "message_processor"
    commands: ["/ping", "ping", "/version", "version"]
    description: "Basic system commands and status"
    priority: 1

  player_info_commands:
    agent: "player_coordinator"
    commands: ["/info", "/myinfo", "/status", "/update", "info", "myinfo", "status", "update", "/list", "list"]
    description: "Player information, status queries, updates, and player lists"
    priority: 2

  team_admin_commands:
    agent: "team_administrator"
    commands: ["/addplayer", "/addmember", "addplayer", "addmember"]
    description: "Team administration and member management"
    priority: 2

  squad_management_commands:
    agent: "squad_selector"
    commands: ["/attendance", "/availability", "/squad", "/matches", "attendance", "availability", "squad", "matches"]
    description: "Squad selection, availability, and match management"
    priority: 2

  communication_commands:
    agent: "message_processor"
    commands: ["/announce", "/poll", "announce", "poll"]
    description: "Team communications and announcements"
    priority: 3

# Agent collaboration patterns
collaboration_patterns:
  primary_with_nlp_routing:
    description: "MESSAGE_PROCESSOR uses NLP_PROCESSOR for intelligent routing decisions"
    agents: ["message_processor", "nlp_processor"]
    workflow:
      - "MESSAGE_PROCESSOR receives all requests"
      - "For complex operations, MESSAGE_PROCESSOR collaborates with NLP_PROCESSOR"
      - "NLP_PROCESSOR analyzes intent and recommends specialist agent"
      - "MESSAGE_PROCESSOR coordinates with recommended specialist"
      - "Response delivered through MESSAGE_PROCESSOR"
  
  intelligent_routing_analysis:
    description: "NLP_PROCESSOR provides sophisticated routing analysis"
    agents: ["nlp_processor"]
    tools: ["advanced_intent_recognition", "analyze_update_context", "routing_recommendation_tool"]
  
  specialist_with_routing_support:
    description: "Specialist agents receive intelligent routing from MESSAGE_PROCESSOR"
    agents: ["player_coordinator", "team_administrator", "squad_selector", "help_assistant"]
    collaboration: true

# Context-based routing (handled by NLP_PROCESSOR tools)
context_routing:
  chat_type_intelligence:
    main_chat: "Player-focused operations via intelligent analysis"
    leadership_chat: "Administrative operations via intelligent analysis"
    private_chat: "Personal assistance via intelligent analysis"
  
  entity_type_intelligence:
    player: "Routed to PLAYER_COORDINATOR via NLP analysis"
    team_member: "Routed to TEAM_ADMINISTRATOR via NLP analysis"
    match: "Routed to SQUAD_SELECTOR via NLP analysis"
    help: "Routed to HELP_ASSISTANT via NLP analysis"

# Performance and optimization
optimization:
  load_balancing:
    enabled: false  # Not needed for 6-agent system
  caching:
    enabled: false  # Simplified for reliability
  routing_cache:
    enabled: false  # Pure CrewAI collaboration handles caching

# Migration notes
migration:
  from: "programmatic_routing"
  to: "crewai_native_collaboration"
  benefits:
    - "Intelligent context-aware routing"
    - "Agent-to-agent collaboration"
    - "Reduced configuration complexity"
    - "Better scalability and flexibility"
    - "CrewAI best practices compliance"